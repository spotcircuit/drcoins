'use client'

import React, { useState } from "react";

// Color tokens (purple theme with teal/cyan cards)
const brand = {
  bg: "from-black via-slate-950 to-purple-950",
  card: "bg-teal-50/90 backdrop-blur supports-[backdrop-filter]:bg-teal-50/80",
  ring: "ring-2 ring-orange-400",
  textMuted: "text-slate-800",
  accent: "text-purple-700",
  accentBg: "bg-purple-600",
  accentBgHover: "hover:bg-purple-700",
  danger: "text-rose-600",
  featuredCard: "bg-purple-50/90",
  featuredBorder: "border-purple-400",
};

// Shared UI components
const Container: React.FC<{className?: string, children: React.ReactNode}> = ({ className = "", children }) => (
  <div className={`mx-auto w-full max-w-7xl px-4 sm:px-6 lg:px-8 ${className}`}>{children}</div>
);

const SectionCard: React.FC<{title?: string, subtitle?: string, children?: React.ReactNode, className?: string}> = ({ title, subtitle, children, className = "" }) => (
  <div className={`${brand.card} ${brand.ring} rounded-2xl p-6 shadow-lg ${className}`}>
    {(title || subtitle) && (
      <div className="mb-5">
        {title && <h3 className="text-lg font-semibold tracking-tight text-slate-900">{title}</h3>}
        {subtitle && <p className={`mt-1 text-sm ${brand.textMuted}`}>{subtitle}</p>}
      </div>
    )}
    {children}
  </div>
);

const Pill: React.FC<{children: React.ReactNode}> = ({ children }) => (
  <span className="inline-flex items-center gap-2 rounded-full border-2 border-orange-400 bg-teal-50 px-3 py-1 text-xs font-medium text-purple-700">
    {children}
  </span>
);

const CTA: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ className = "", children, ...props }) => (
  <button
    className={`inline-flex items-center justify-center rounded-xl ${brand.accentBg} ${brand.accentBgHover} px-4 py-2 text-sm font-semibold text-white shadow-md transition active:scale-[.99] ${className}`}
    {...props}
  >
    {children}
  </button>
);

// GALLERY (upload preview)
const uploadedImages: string[] = [
  // Add your image URLs here
  "https://images.unsplash.com/photo-1614850523296-d8c1af93d400?w=500&h=400&fit=crop",
  "https://images.unsplash.com/photo-1550745165-9bc0b252726f?w=500&h=400&fit=crop",
  "https://images.unsplash.com/photo-1511512578047-dfb367046420?w=500&h=400&fit=crop",
  "https://images.unsplash.com/photo-1612287230202-1ff1d85d1bdf?w=500&h=400&fit=crop",
  "https://images.unsplash.com/photo-1538481199705-c710c4e965fc?w=500&h=400&fit=crop",
  "https://images.unsplash.com/photo-1552820728-8b83bb6b773f?w=500&h=400&fit=crop",
];

const GalleryMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">Gallery</h2>
    {uploadedImages.length === 0 ? (
      <p className="text-sm text-slate-300">
        No images yet â€” add URLs to <code>uploadedImages</code>.
      </p>
    ) : (
      <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
        {uploadedImages.map((src, i) => (
          <div
            key={src}
            className="group relative overflow-hidden rounded-2xl border-2 border-orange-400 bg-teal-50/90 shadow-sm"
          >
            <div className="aspect-[4/3] w-full overflow-hidden">
              <img
                src={src}
                alt={`upload-${i}`}
                className="h-full w-full object-cover transition group-hover:scale-105"
              />
            </div>
            <div className="absolute inset-x-0 bottom-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent p-3 text-sm font-medium text-white">
              Image {i + 1}
            </div>
          </div>
        ))}
      </div>
    )}
  </Container>
);

// Shop Pages
const ShopCoinsMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">Shop Coins</h2>
    <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {[
        {name: "Starter Pack", coins: 1000, price: 14.99},
        {name: "Popular Choice", coins: 5460, price: 69.99},
        {name: "Best Value", coins: 36400, price: 399.99},
      ].map((pack) => (
        <SectionCard key={pack.name} title={pack.name}>
          <div className="text-2xl font-bold text-purple-600">{pack.coins.toLocaleString()} Coins</div>
          <div className="mt-2 text-lg font-semibold">${pack.price}</div>
          <CTA className="mt-4 w-full">Purchase</CTA>
        </SectionCard>
      ))}
    </div>
  </Container>
);

const ShopPointsMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">Shop Nobility Points</h2>
    <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {[
        {name: "Baron", days: 30, price: 49.99},
        {name: "Duke", days: 30, price: 149.99},
        {name: "King", days: 30, price: 599.99},
      ].map((tier) => (
        <SectionCard key={tier.name} title={tier.name}>
          <div className="text-lg text-purple-600">{tier.days} Days</div>
          <div className="mt-2 text-lg font-semibold">${tier.price}</div>
          <CTA className="mt-4 w-full">Purchase</CTA>
        </SectionCard>
      ))}
    </div>
  </Container>
);

const ProductMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <div className="grid gap-8 lg:grid-cols-2">
      <div className="relative aspect-square overflow-hidden rounded-2xl bg-teal-50/90 border-2 border-orange-400">
        <img 
          src="/productpic.png" 
          alt="LiveMe Coins Bundle" 
          className="h-full w-full object-cover"
        />
      </div>
      <div>
        <Pill>Official Reseller</Pill>
        <h1 className="mt-4 text-3xl font-bold tracking-tight text-white">LiveMe Coins Bundle</h1>
        <p className="mt-3 text-lg text-slate-300">Get instant delivery of LiveMe coins to your account. Secure, fast, and reliable.</p>
        <div className="mt-6 text-3xl font-bold text-white">$69.99</div>
        <CTA className="mt-6">Add to Cart</CTA>
      </div>
    </div>
  </Container>
);

const PurchaseMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">Complete Purchase</h2>
    <div className="grid gap-6 lg:grid-cols-3">
      <div className="lg:col-span-2">
        <SectionCard title="Billing Information">
          <div className="space-y-4">
            <input type="text" placeholder="Full Name" className="w-full rounded-lg border-2 border-orange-400 px-3 py-2" />
            <input type="email" placeholder="Email" className="w-full rounded-lg border-2 border-orange-400 px-3 py-2" />
            <input type="text" placeholder="Card Number" className="w-full rounded-lg border-2 border-orange-400 px-3 py-2" />
          </div>
        </SectionCard>
      </div>
      <div>
        <SectionCard title="Order Summary">
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span>Subtotal</span>
              <span>$69.99</span>
            </div>
            <div className="flex justify-between font-semibold">
              <span>Total</span>
              <span>$69.99</span>
            </div>
          </div>
          <CTA className="mt-4 w-full">Complete Order</CTA>
        </SectionCard>
      </div>
    </div>
  </Container>
);

const AdminMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">Admin Dashboard</h2>
    <div className="grid gap-6 md:grid-cols-3">
      {["Orders", "Users", "Products"].map((section) => (
        <SectionCard key={section} title={section}>
          <div className="text-2xl font-bold text-purple-600">{Math.floor(Math.random() * 1000)}</div>
          <div className="text-sm text-slate-800">Total {section.toLowerCase()}</div>
        </SectionCard>
      ))}
    </div>
  </Container>
);

const AboutFAQMock: React.FC = () => (
  <Container className="py-10 lg:py-12">
    <h2 className="mb-6 text-2xl font-bold tracking-tight text-white">About/FAQ</h2>
    <div className="space-y-4">
      {[
        {q: "How fast is delivery?", a: "Most orders complete within minutes after ID verification."},
        {q: "Are you official?", a: "Yes, we're an approved LiveMe reseller."},
        {q: "What payment methods?", a: "Card, Klarna, Zelle, Apple Cash, Venmo, and more."},
      ].map((faq) => (
        <SectionCard key={faq.q}>
          <h3 className="font-semibold">{faq.q}</h3>
          <p className="mt-2 text-sm text-slate-800">{faq.a}</p>
        </SectionCard>
      ))}
    </div>
  </Container>
);

// NAV + PAGE SHELL
const PAGES = ["Home", "Shop Coins", "Shop Points", "Product", "Purchase", "Admin", "Gallery", "About/FAQ"] as const;
type Page = typeof PAGES[number];

const Shell: React.FC<{ page: Page; setPage: (p: Page) => void }>= ({ page, setPage }) => (
  <header className="sticky top-0 z-20 border-b border-purple-800/50 bg-black/80 backdrop-blur">
    <Container className="flex h-16 items-center justify-between">
      <div className="text-lg font-bold tracking-tight text-white">Oh Deer Coins</div>
      <nav className="hidden items-center gap-1 md:flex">
        {PAGES.map((label) => (
          <button
            key={label}
            onClick={() => setPage(label)}
            className={`rounded-lg px-3 py-2 text-sm font-medium transition ${page===label?"bg-purple-700/40 text-white":"text-purple-300 hover:bg-purple-700/30"}`}
          >
            {label}
          </button>
        ))}
      </nav>
      <div className="md:hidden">
        <select
          className="rounded-lg border border-purple-600 bg-black px-2 py-2 text-sm text-white"
          value={page}
          onChange={(e)=>setPage(e.target.value as Page)}
        >
          {PAGES.map(p => <option key={p}>{p}</option>)}
        </select>
      </div>
    </Container>
  </header>
);

// HOME
const HomeMock: React.FC<{ setPage: (p: Page)=>void }>= ({ setPage }) => (
  <div className={`relative bg-gradient-to-b ${brand.bg}`}>
    {/* Hero Section with Logo */}
    <Container className="py-12 sm:py-16 lg:py-20">
      <div className="text-center">
        <img 
          src="/logo.png" 
          alt="Oh Deer Coins" 
          className="mx-auto h-32 w-32 rounded-xl object-contain mb-6"
        />
        <h1 className="text-4xl font-bold tracking-tight text-white sm:text-5xl lg:text-6xl">
          Oh Deer Coins
        </h1>
        <p className="mt-4 text-xl text-purple-300">
          Your Trusted Official LiveMe Reseller â€¢ 24/7 Instant Fulfillment
        </p>
      </div>
    </Container>
    
    <Container className="py-10 sm:py-14 lg:py-16">
      <div className={`${brand.card} ${brand.ring} relative overflow-hidden rounded-3xl px-6 py-10 shadow-xl sm:px-10` }>
        <div className="absolute -right-24 -top-24 h-56 w-56 rounded-full bg-purple-500/30 blur-3xl" />
        <div className="absolute -bottom-24 -left-24 h-56 w-56 rounded-full bg-purple-800/30 blur-3xl" />
        <div className="relative grid gap-10 md:grid-cols-2">
          <div>
            <Pill>Fast â€¢ Safe â€¢ Official</Pill>
            <h2 className="mt-4 text-3xl font-bold tracking-tight text-slate-900 sm:text-4xl">
              Buy LiveMe Coins & Nobility Points in seconds.
            </h2>
            <p className={`mt-3 text-base ${brand.textMuted}`}>
              Power up your LiveMe account with instant coins and privileges. Orders are fulfilled around the clock with friendly human support when you need it.
            </p>
            <div className="mt-6 flex flex-wrap gap-3">
              <CTA onClick={()=>setPage("Shop Coins")}>Shop Coins</CTA>
              <button onClick={()=>setPage("Shop Points")} className="inline-flex items-center justify-center rounded-xl border-2 border-purple-600 bg-white px-4 py-2 text-sm font-semibold text-purple-700 shadow-sm hover:bg-purple-50">
                Shop Points
              </button>
            </div>
            <ul className="mt-6 grid gap-2 text-sm text-slate-800 sm:grid-cols-2">
              <li className="flex items-center gap-2"><span className="h-1.5 w-1.5 rounded-full bg-purple-400"/> Official reseller</li>
              <li className="flex items-center gap-2"><span className="h-1.5 w-1.5 rounded-full bg-purple-400"/> 24/7 order completion</li>
              <li className="flex items-center gap-2"><span className="h-1.5 w-1.5 rounded-full bg-purple-400"/> Multiple payment methods</li>
              <li className="flex items-center gap-2"><span className="h-1.5 w-1.5 rounded-full bg-purple-400"/> Real human support</li>
            </ul>
          </div>
          <div className="">
            <div className="relative isolate overflow-hidden rounded-2xl border-2 border-purple-400 bg-purple-50/90 p-6 shadow-md">
              <div className="mb-4 text-sm font-semibold text-slate-900">Featured bundles</div>
              <div className="grid gap-3 sm:grid-cols-2">
                {[{name:"5,460 Coins", price:69.99},{name:"36,400 Coins", price:399.99},{name:"Nobility: Duke", price:149.99},{name:"Nobility: King", price:599.99}].map((p)=> (
                  <div key={p.name} className="rounded-xl border-2 border-purple-400 bg-white/90 p-4 shadow-sm">
                    <div className="text-sm font-medium text-slate-900">{p.name}</div>
                    <div className="mt-1 text-xs text-slate-700">Instant delivery after ID match</div>
                    <div className="mt-3 flex items-center justify-between">
                      <div className="text-lg font-semibold text-slate-900">${p.price.toFixed(2)}</div>
                      <button onClick={()=>setPage(p.name.includes("Coins")?"Shop Coins":"Shop Points")} className="rounded-lg border-2 border-purple-400 bg-purple-50/90 px-3 py-1.5 text-xs font-semibold text-purple-700 hover:bg-purple-100">View</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="mt-10 grid gap-6 md:grid-cols-3">
        {[
          {title:"Official & transparent", body:"We operate as an approved LiveMe reseller with clear pricing and receipts."},
          {title:"Fast fulfillment", body:"Orders are processed 24/7â€”most complete within minutes after ID verification."},
          {title:"Flexible payments", body:"Pay by card, Klarna, or message support for Zelle, Apple Cash, Venmo, and more."},
        ].map((f) => (
          <SectionCard key={f.title} title={f.title} subtitle={f.body} />
        ))}
      </div>
    </Container>
  </div>
);

// MAIN APP
export default function OhDeerCoinsMockups() {
  const [page, setPage] = useState<Page>("Home");

  return (
    <div className="min-h-screen bg-gradient-to-b from-black via-slate-950 to-purple-950">
      <Shell page={page} setPage={setPage} />
      {page === "Home" && <HomeMock setPage={setPage} />}
      {page === "Shop Coins" && <ShopCoinsMock />}
      {page === "Shop Points" && <ShopPointsMock />}
      {page === "Product" && <ProductMock />}
      {page === "Purchase" && <PurchaseMock />}
      {page === "Admin" && <AdminMock />}
      {page === "Gallery" && <GalleryMock />}
      {page === "About/FAQ" && <AboutFAQMock />}
      <footer className="mt-16 border-t border-white/10">
        <Container className="flex flex-col items-center justify-between gap-4 py-8 text-center text-white/80 sm:flex-row sm:text-left">
          <p className="text-xs">Â© {new Date().getFullYear()} Oh Deer Coins. All rights reserved.</p>
          <div className="flex flex-wrap items-center justify-center gap-2 text-xs">
            <a className="rounded-md border border-purple-700 bg-black/50 px-2 py-1 text-purple-200 hover:bg-purple-700/30" href="#">Terms</a>
            <a className="rounded-md border border-purple-700 bg-black/50 px-2 py-1 text-purple-200 hover:bg-purple-700/30" href="#">Privacy</a>
            <a className="rounded-md border border-purple-700 bg-black/50 px-2 py-1 text-purple-200 hover:bg-purple-700/30" href="#">Refunds</a>
          </div>
        </Container>
      </footer>
    </div>
  );
}
